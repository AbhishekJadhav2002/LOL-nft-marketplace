/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { LOL, LOLInterface } from "../../contracts/LOL";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "person",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "laugh",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002d6238038062002d628339818101604052810190620000379190620002a7565b806040518060400160405280600381526020017f4c4f4c00000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4c4f4c00000000000000000000000000000000000000000000000000000000008152508160009081620000b5919062000553565b508060019081620000c7919062000553565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200013691906200064b565b60405180910390fd5b62000150816200017460201b60201c565b506200016d67b6efa8f4c200e6f860c01b6200023a60201b60201c565b5062000668565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200026f8262000242565b9050919050565b620002818162000262565b81146200028d57600080fd5b50565b600081519050620002a18162000276565b92915050565b600060208284031215620002c057620002bf6200023d565b5b6000620002d08482850162000290565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200035b57607f821691505b60208210810362000371576200037062000313565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003db7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200039c565b620003e786836200039c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004346200042e6200042884620003ff565b62000409565b620003ff565b9050919050565b6000819050919050565b620004508362000413565b620004686200045f826200043b565b848454620003a9565b825550505050565b600090565b6200047f62000470565b6200048c81848462000445565b505050565b5b81811015620004b457620004a860008262000475565b60018101905062000492565b5050565b601f8211156200050357620004cd8162000377565b620004d8846200038c565b81016020851015620004e8578190505b62000500620004f7856200038c565b83018262000491565b50505b505050565b600082821c905092915050565b6000620005286000198460080262000508565b1980831691505092915050565b600062000543838362000515565b9150826002028217905092915050565b6200055e82620002d9565b67ffffffffffffffff8111156200057a5762000579620002e4565b5b62000586825462000342565b62000593828285620004b8565b600060209050601f831160018114620005cb5760008415620005b6578287015190505b620005c2858262000535565b86555062000632565b601f198416620005db8662000377565b60005b828110156200060557848901518255600182019150602085019450602081019050620005de565b8683101562000625578489015162000621601f89168262000515565b8355505b6001600288020188555050505b505050505050565b620006458162000262565b82525050565b60006020820190506200066260008301846200063a565b92915050565b6126ea80620006786000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde146102a4578063c87b56dd146102c0578063e985e9c5146102f0578063f2fde38b14610320578063fd1e14801461033c5761010b565b8063715018a6146102425780638da5cb5b1461024c57806395d89b411461026a578063a22cb465146102885761010b565b806323b872dd116100de57806323b872dd146101aa57806342842e0e146101c65780636352211e146101e257806370a08231146102125761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611b42565b61036c565b6040516101379190611b8a565b60405180910390f35b6101486103cd565b6040516101559190611c35565b60405180910390f35b61017860048036038101906101739190611c8d565b61045f565b6040516101859190611cfb565b60405180910390f35b6101a860048036038101906101a39190611d42565b61047b565b005b6101c460048036038101906101bf9190611d82565b610491565b005b6101e060048036038101906101db9190611d82565b610593565b005b6101fc60048036038101906101f79190611c8d565b6105b3565b6040516102099190611cfb565b60405180910390f35b61022c60048036038101906102279190611dd5565b6105c5565b6040516102399190611e11565b60405180910390f35b61024a61067f565b005b610254610693565b6040516102619190611cfb565b60405180910390f35b6102726106bd565b60405161027f9190611c35565b60405180910390f35b6102a2600480360381019061029d9190611e58565b61074f565b005b6102be60048036038101906102b99190611fcd565b610765565b005b6102da60048036038101906102d59190611c8d565b610782565b6040516102e79190611c35565b60405180910390f35b61030a60048036038101906103059190612050565b610895565b6040516103179190611b8a565b60405180910390f35b61033a60048036038101906103359190611dd5565b610929565b005b61035660048036038101906103519190612131565b6109af565b6040516103639190611e11565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c657506103c582610a9e565b5b9050919050565b6060600080546103dc906121bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610408906121bc565b80156104555780601f1061042a57610100808354040283529160200191610455565b820191906000526020600020905b81548152906001019060200180831161043857829003601f168201915b5050505050905090565b600061046a82610b80565b5061047482610c08565b9050919050565b61048d8282610488610c45565b610c4d565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105035760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104fa9190611cfb565b60405180910390fd5b60006105178383610512610c45565b610c5f565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461058d578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610584939291906121ed565b60405180910390fd5b50505050565b6105ae83838360405180602001604052806000815250610765565b505050565b60006105be82610b80565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106385760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161062f9190611cfb565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610687610e79565b6106916000610f00565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546106cc906121bc565b80601f01602080910402602001604051908101604052809291908181526020018280546106f8906121bc565b80156107455780601f1061071a57610100808354040283529160200191610745565b820191906000526020600020905b81548152906001019060200180831161072857829003601f168201915b5050505050905090565b61076161075a610c45565b8383610fc6565b5050565b610770848484610491565b61077c84848484611135565b50505050565b606061078d82610b80565b5060006006600084815260200190815260200160002080546107ae906121bc565b80601f01602080910402602001604051908101604052809291908181526020018280546107da906121bc565b80156108275780601f106107fc57610100808354040283529160200191610827565b820191906000526020600020905b81548152906001019060200180831161080a57829003601f168201915b5050505050905060006108386112ec565b9050600081510361084d578192505050610890565b60008251111561088257808260405160200161086a929190612260565b60405160208183030381529060405292505050610890565b61088b84611303565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610931610e79565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109a35760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161099a9190611cfb565b60405180910390fd5b6109ac81610f00565b50565b60006109c567e01b9ad12569e96760c01b61136c565b6109d96701443624d27b188660c01b61136c565b6109ed67cc7610d0a8c8a3ed60c01b61136c565b600060086000815480929190610a02906122b3565b919050559050610a1c6784f67470728e6bbb60c01b61136c565b610a30679ccdf5ea9f8d414760c01b61136c565b610a3a848261136f565b610a4e67f2326f2f6f81c37460c01b61136c565b610a6267309e231b53253ff460c01b61136c565b610a6c8184611468565b610a80676890b0a7041c2e6a60c01b61136c565b610a9467931f40ab1904159b60c01b61136c565b8091505092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610b6957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610b795750610b78826114c4565b5b9050919050565b600080610b8c8361152e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bff57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610bf69190611e11565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610c5a838383600161156b565b505050565b600080610c6b8461152e565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610cad57610cac818486611730565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d3e57610cef60008560008061156b565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610dc1576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610e81610c45565b73ffffffffffffffffffffffffffffffffffffffff16610e9f610693565b73ffffffffffffffffffffffffffffffffffffffff1614610efe57610ec2610c45565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ef59190611cfb565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361103757816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161102e9190611cfb565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111289190611b8a565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156112e6578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611179610c45565b8685856040518563ffffffff1660e01b815260040161119b9493929190612350565b6020604051808303816000875af19250505080156111d757506040513d601f19601f820116820180604052508101906111d491906123b1565b60015b61125b573d8060008114611207576040519150601f19603f3d011682016040523d82523d6000602084013e61120c565b606091505b50600081510361125357836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161124a9190611cfb565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112e457836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112db9190611cfb565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b606061130e82610b80565b5060006113196112ec565b905060008151116113395760405180602001604052806000815250611364565b80611343846117f4565b604051602001611354929190612260565b6040516020818303038152906040525b915050919050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113e15760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113d89190611cfb565b60405180910390fd5b60006113ef83836000610c5f565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114635760006040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161145a9190611cfb565b60405180910390fd5b505050565b80600660008481526020019081526020016000209081611488919061258a565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516114b89190611e11565b60405180910390a15050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806115a45750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156116d85760006115b484610b80565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561161f57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561163257506116308184610895565b155b1561167457826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161166b9190611cfb565b60405180910390fd5b81156116d657838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61173b8383836118c2565b6117ef57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117b057806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117a79190611e11565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016117e692919061265c565b60405180910390fd5b505050565b60606000600161180384611983565b01905060008167ffffffffffffffff81111561182257611821611ea2565b5b6040519080825280601f01601f1916602001820160405280156118545781602001600182028036833780820191505090505b509050600082602001820190505b6001156118b7578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816118ab576118aa612685565b5b04945060008503611862575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561197a57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061193b575061193a8484610895565b5b8061197957508273ffffffffffffffffffffffffffffffffffffffff1661196183610c08565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106119e1577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119d7576119d6612685565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a1e576d04ee2d6d415b85acef81000000008381611a1457611a13612685565b5b0492506020810190505b662386f26fc100008310611a4d57662386f26fc100008381611a4357611a42612685565b5b0492506010810190505b6305f5e1008310611a76576305f5e1008381611a6c57611a6b612685565b5b0492506008810190505b6127108310611a9b576127108381611a9157611a90612685565b5b0492506004810190505b60648310611abe5760648381611ab457611ab3612685565b5b0492506002810190505b600a8310611acd576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b1f81611aea565b8114611b2a57600080fd5b50565b600081359050611b3c81611b16565b92915050565b600060208284031215611b5857611b57611ae0565b5b6000611b6684828501611b2d565b91505092915050565b60008115159050919050565b611b8481611b6f565b82525050565b6000602082019050611b9f6000830184611b7b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611bdf578082015181840152602081019050611bc4565b60008484015250505050565b6000601f19601f8301169050919050565b6000611c0782611ba5565b611c118185611bb0565b9350611c21818560208601611bc1565b611c2a81611beb565b840191505092915050565b60006020820190508181036000830152611c4f8184611bfc565b905092915050565b6000819050919050565b611c6a81611c57565b8114611c7557600080fd5b50565b600081359050611c8781611c61565b92915050565b600060208284031215611ca357611ca2611ae0565b5b6000611cb184828501611c78565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ce582611cba565b9050919050565b611cf581611cda565b82525050565b6000602082019050611d106000830184611cec565b92915050565b611d1f81611cda565b8114611d2a57600080fd5b50565b600081359050611d3c81611d16565b92915050565b60008060408385031215611d5957611d58611ae0565b5b6000611d6785828601611d2d565b9250506020611d7885828601611c78565b9150509250929050565b600080600060608486031215611d9b57611d9a611ae0565b5b6000611da986828701611d2d565b9350506020611dba86828701611d2d565b9250506040611dcb86828701611c78565b9150509250925092565b600060208284031215611deb57611dea611ae0565b5b6000611df984828501611d2d565b91505092915050565b611e0b81611c57565b82525050565b6000602082019050611e266000830184611e02565b92915050565b611e3581611b6f565b8114611e4057600080fd5b50565b600081359050611e5281611e2c565b92915050565b60008060408385031215611e6f57611e6e611ae0565b5b6000611e7d85828601611d2d565b9250506020611e8e85828601611e43565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611eda82611beb565b810181811067ffffffffffffffff82111715611ef957611ef8611ea2565b5b80604052505050565b6000611f0c611ad6565b9050611f188282611ed1565b919050565b600067ffffffffffffffff821115611f3857611f37611ea2565b5b611f4182611beb565b9050602081019050919050565b82818337600083830152505050565b6000611f70611f6b84611f1d565b611f02565b905082815260208101848484011115611f8c57611f8b611e9d565b5b611f97848285611f4e565b509392505050565b600082601f830112611fb457611fb3611e98565b5b8135611fc4848260208601611f5d565b91505092915050565b60008060008060808587031215611fe757611fe6611ae0565b5b6000611ff587828801611d2d565b945050602061200687828801611d2d565b935050604061201787828801611c78565b925050606085013567ffffffffffffffff81111561203857612037611ae5565b5b61204487828801611f9f565b91505092959194509250565b6000806040838503121561206757612066611ae0565b5b600061207585828601611d2d565b925050602061208685828601611d2d565b9150509250929050565b600067ffffffffffffffff8211156120ab576120aa611ea2565b5b6120b482611beb565b9050602081019050919050565b60006120d46120cf84612090565b611f02565b9050828152602081018484840111156120f0576120ef611e9d565b5b6120fb848285611f4e565b509392505050565b600082601f83011261211857612117611e98565b5b81356121288482602086016120c1565b91505092915050565b6000806040838503121561214857612147611ae0565b5b600061215685828601611d2d565b925050602083013567ffffffffffffffff81111561217757612176611ae5565b5b61218385828601612103565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806121d457607f821691505b6020821081036121e7576121e661218d565b5b50919050565b60006060820190506122026000830186611cec565b61220f6020830185611e02565b61221c6040830184611cec565b949350505050565b600081905092915050565b600061223a82611ba5565b6122448185612224565b9350612254818560208601611bc1565b80840191505092915050565b600061226c828561222f565b9150612278828461222f565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006122be82611c57565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122f0576122ef612284565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000612322826122fb565b61232c8185612306565b935061233c818560208601611bc1565b61234581611beb565b840191505092915050565b60006080820190506123656000830187611cec565b6123726020830186611cec565b61237f6040830185611e02565b81810360608301526123918184612317565b905095945050505050565b6000815190506123ab81611b16565b92915050565b6000602082840312156123c7576123c6611ae0565b5b60006123d58482850161239c565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026124407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612403565b61244a8683612403565b95508019841693508086168417925050509392505050565b6000819050919050565b600061248761248261247d84611c57565b612462565b611c57565b9050919050565b6000819050919050565b6124a18361246c565b6124b56124ad8261248e565b848454612410565b825550505050565b600090565b6124ca6124bd565b6124d5818484612498565b505050565b5b818110156124f9576124ee6000826124c2565b6001810190506124db565b5050565b601f82111561253e5761250f816123de565b612518846123f3565b81016020851015612527578190505b61253b612533856123f3565b8301826124da565b50505b505050565b600082821c905092915050565b600061256160001984600802612543565b1980831691505092915050565b600061257a8383612550565b9150826002028217905092915050565b61259382611ba5565b67ffffffffffffffff8111156125ac576125ab611ea2565b5b6125b682546121bc565b6125c18282856124fd565b600060209050601f8311600181146125f457600084156125e2578287015190505b6125ec858261256e565b865550612654565b601f198416612602866123de565b60005b8281101561262a57848901518255600182019150602085019450602081019050612605565b868310156126475784890151612643601f891682612550565b8355505b6001600288020188555050505b505050505050565b60006040820190506126716000830185611cec565b61267e6020830184611e02565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220dba77dd618044e9fc5ead22adb29a8e67c9cb73d516f363475f3d1307fbdc0c664736f6c63430008140033";

type LOLConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LOLConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LOL__factory extends ContractFactory {
  constructor(...args: LOLConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      LOL & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LOL__factory {
    return super.connect(runner) as LOL__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LOLInterface {
    return new Interface(_abi) as LOLInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LOL {
    return new Contract(address, _abi, runner) as unknown as LOL;
  }
}
