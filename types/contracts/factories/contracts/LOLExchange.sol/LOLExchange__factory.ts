/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LOLExchange,
  LOLExchangeInterface,
} from "../../../contracts/LOLExchange.sol/LOLExchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lolToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ListingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "ListingSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isSold",
        type: "bool",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lolToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000ffa38038062000ffa833981810160405281019062000037919062000236565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200028e565b60405180910390fd5b620000be816200010860201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002ab565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fe82620001d1565b9050919050565b6200021081620001f1565b81146200021c57600080fd5b50565b600081519050620002308162000205565b92915050565b6000806040838503121562000250576200024f620001cc565b5b600062000260858286016200021f565b925050602062000273858286016200021f565b9150509250929050565b6200028881620001f1565b82525050565b6000602082019050620002a560008301846200027d565b92915050565b610d3f80620002bb6000396000f3fe6080604052600436106100705760003560e01c80638b4b09ea1161004e5780638b4b09ea146100d15780638da5cb5b146100fc578063de74e57b14610127578063f2fde38b1461016957610070565b806324780c561461007557806351ed82881461009e578063715018a6146100ba575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061095a565b610192565b005b6100b860048036038101906100b391906109ad565b6103cc565b005b3480156100c657600080fd5b506100cf6105fc565b005b3480156100dd57600080fd5b506100e6610610565b6040516100f39190610a39565b60405180910390f35b34801561010857600080fd5b50610111610636565b60405161011e9190610a63565b60405180910390f35b34801561013357600080fd5b5061014e600480360381019061014991906109ad565b61065f565b60405161016096959493929190610aa8565b60405180910390f35b34801561017557600080fd5b50610190600480360381019061018b9190610b09565b6106e8565b005b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016101cf93929190610b36565b600060405180830381600087803b1580156101e957600080fd5b505af11580156101fd573d6000803e3d6000fd5b505050506002600081548092919061021490610b9c565b9190505550600060025490506040518060c001604052808281526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff16815250600360008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16827fbfe9724d0a7254cfbb4f315c27418ff3751aebb099764b83fb3a4e2ca00e69d086866040516103be929190610be4565b60405180910390a450505050565b60006003600083815260200190815260200160002090508060040160009054906101000a900460ff1615610435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c90610c90565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd338360040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600301546040518463ffffffff1660e01b81526004016104bc93929190610b36565b6020604051808303816000875af11580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff9190610cdc565b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600201546040518463ffffffff1660e01b815260040161056593929190610b36565b600060405180830381600087803b15801561057f57600080fd5b505af1158015610593573d6000803e3d6000fd5b5050505060018160040160006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16827f8f9d273ad6b9ef6936db5cd20a141ecb032af10f2a5fec60c106343670b2c87760405160405180910390a35050565b61060461076e565b61060e60006107f5565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b6106f061076e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107625760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107599190610a63565b60405180910390fd5b61076b816107f5565b50565b6107766108b9565b73ffffffffffffffffffffffffffffffffffffffff16610794610636565b73ffffffffffffffffffffffffffffffffffffffff16146107f3576107b76108b9565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107ea9190610a63565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108f1826108c6565b9050919050565b610901816108e6565b811461090c57600080fd5b50565b60008135905061091e816108f8565b92915050565b6000819050919050565b61093781610924565b811461094257600080fd5b50565b6000813590506109548161092e565b92915050565b600080600060608486031215610973576109726108c1565b5b60006109818682870161090f565b935050602061099286828701610945565b92505060406109a386828701610945565b9150509250925092565b6000602082840312156109c3576109c26108c1565b5b60006109d184828501610945565b91505092915050565b6000819050919050565b60006109ff6109fa6109f5846108c6565b6109da565b6108c6565b9050919050565b6000610a11826109e4565b9050919050565b6000610a2382610a06565b9050919050565b610a3381610a18565b82525050565b6000602082019050610a4e6000830184610a2a565b92915050565b610a5d816108e6565b82525050565b6000602082019050610a786000830184610a54565b92915050565b610a8781610924565b82525050565b60008115159050919050565b610aa281610a8d565b82525050565b600060c082019050610abd6000830189610a7e565b610aca6020830188610a54565b610ad76040830187610a7e565b610ae46060830186610a7e565b610af16080830185610a99565b610afe60a0830184610a54565b979650505050505050565b600060208284031215610b1f57610b1e6108c1565b5b6000610b2d8482850161090f565b91505092915050565b6000606082019050610b4b6000830186610a54565b610b586020830185610a54565b610b656040830184610a7e565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ba782610924565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610bd957610bd8610b6d565b5b600182019050919050565b6000604082019050610bf96000830185610a7e565b610c066020830184610a7e565b9392505050565b600082825260208201905092915050565b7f4c4f4c4e465445786368616e67653a204e465420697320616c7265616479207360008201527f6f6c640000000000000000000000000000000000000000000000000000000000602082015250565b6000610c7a602383610c0d565b9150610c8582610c1e565b604082019050919050565b60006020820190508181036000830152610ca981610c6d565b9050919050565b610cb981610a8d565b8114610cc457600080fd5b50565b600081519050610cd681610cb0565b92915050565b600060208284031215610cf257610cf16108c1565b5b6000610d0084828501610cc7565b9150509291505056fea264697066735822122075fcb7ade4b0f8c68cb2b6356205cb5888f9b0d28f382ac79b61eb349b01f04a64736f6c63430008140033";

type LOLExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LOLExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LOLExchange__factory extends ContractFactory {
  constructor(...args: LOLExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    _lolToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, _lolToken, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    _lolToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, _lolToken, overrides || {}) as Promise<
      LOLExchange & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LOLExchange__factory {
    return super.connect(runner) as LOLExchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LOLExchangeInterface {
    return new Interface(_abi) as LOLExchangeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LOLExchange {
    return new Contract(address, _abi, runner) as unknown as LOLExchange;
  }
}
