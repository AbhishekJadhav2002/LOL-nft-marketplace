/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { LOL, LOLInterface } from "../../contracts/LOL";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "person",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "laugh",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002dd938038062002dd98339818101604052810190620000379190620002a7565b806040518060400160405280600381526020017f4c4f4c00000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4c4f4c00000000000000000000000000000000000000000000000000000000008152508160009081620000b5919062000553565b508060019081620000c7919062000553565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200013691906200064b565b60405180910390fd5b62000150816200017460201b60201c565b506200016d6726b0d8a9a255312c60c01b6200023a60201b60201c565b5062000668565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200026f8262000242565b9050919050565b620002818162000262565b81146200028d57600080fd5b50565b600081519050620002a18162000276565b92915050565b600060208284031215620002c057620002bf6200023d565b5b6000620002d08482850162000290565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200035b57607f821691505b60208210810362000371576200037062000313565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003db7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200039c565b620003e786836200039c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004346200042e6200042884620003ff565b62000409565b620003ff565b9050919050565b6000819050919050565b620004508362000413565b620004686200045f826200043b565b848454620003a9565b825550505050565b600090565b6200047f62000470565b6200048c81848462000445565b505050565b5b81811015620004b457620004a860008262000475565b60018101905062000492565b5050565b601f8211156200050357620004cd8162000377565b620004d8846200038c565b81016020851015620004e8578190505b62000500620004f7856200038c565b83018262000491565b50505b505050565b600082821c905092915050565b6000620005286000198460080262000508565b1980831691505092915050565b600062000543838362000515565b9150826002028217905092915050565b6200055e82620002d9565b67ffffffffffffffff8111156200057a5762000579620002e4565b5b62000586825462000342565b62000593828285620004b8565b600060209050601f831160018114620005cb5760008415620005b6578287015190505b620005c2858262000535565b86555062000632565b601f198416620005db8662000377565b60005b828110156200060557848901518255600182019150602085019450602081019050620005de565b8683101562000625578489015162000621601f89168262000515565b8355505b6001600288020188555050505b505050505050565b620006458162000262565b82525050565b60006020820190506200066260008301846200063a565b92915050565b61276180620006786000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde146102a4578063c87b56dd146102c0578063e985e9c5146102f0578063f2fde38b14610320578063fd1e14801461033c5761010b565b8063715018a6146102425780638da5cb5b1461024c57806395d89b411461026a578063a22cb465146102885761010b565b806323b872dd116100de57806323b872dd146101aa57806342842e0e146101c65780636352211e146101e257806370a08231146102125761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611bb9565b61036c565b6040516101379190611c01565b60405180910390f35b6101486103cd565b6040516101559190611cac565b60405180910390f35b61017860048036038101906101739190611d04565b61045f565b6040516101859190611d72565b60405180910390f35b6101a860048036038101906101a39190611db9565b61047b565b005b6101c460048036038101906101bf9190611df9565b610491565b005b6101e060048036038101906101db9190611df9565b610593565b005b6101fc60048036038101906101f79190611d04565b6105b3565b6040516102099190611d72565b60405180910390f35b61022c60048036038101906102279190611e4c565b6105c5565b6040516102399190611e88565b60405180910390f35b61024a61067f565b005b610254610693565b6040516102619190611d72565b60405180910390f35b6102726106bd565b60405161027f9190611cac565b60405180910390f35b6102a2600480360381019061029d9190611ecf565b61074f565b005b6102be60048036038101906102b99190612044565b610765565b005b6102da60048036038101906102d59190611d04565b610782565b6040516102e79190611cac565b60405180910390f35b61030a600480360381019061030591906120c7565b610895565b6040516103179190611c01565b60405180910390f35b61033a60048036038101906103359190611e4c565b610929565b005b610356600480360381019061035191906121a8565b6109af565b6040516103639190611e88565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c657506103c582610b15565b5b9050919050565b6060600080546103dc90612233565b80601f016020809104026020016040519081016040528092919081815260200182805461040890612233565b80156104555780601f1061042a57610100808354040283529160200191610455565b820191906000526020600020905b81548152906001019060200180831161043857829003601f168201915b5050505050905090565b600061046a82610bf7565b5061047482610c7f565b9050919050565b61048d8282610488610cbc565b610cc4565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105035760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104fa9190611d72565b60405180910390fd5b60006105178383610512610cbc565b610cd6565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461058d578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161058493929190612264565b60405180910390fd5b50505050565b6105ae83838360405180602001604052806000815250610765565b505050565b60006105be82610bf7565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106385760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161062f9190611d72565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610687610ef0565b6106916000610f77565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546106cc90612233565b80601f01602080910402602001604051908101604052809291908181526020018280546106f890612233565b80156107455780601f1061071a57610100808354040283529160200191610745565b820191906000526020600020905b81548152906001019060200180831161072857829003601f168201915b5050505050905090565b61076161075a610cbc565b838361103d565b5050565b610770848484610491565b61077c848484846111ac565b50505050565b606061078d82610bf7565b5060006006600084815260200190815260200160002080546107ae90612233565b80601f01602080910402602001604051908101604052809291908181526020018280546107da90612233565b80156108275780601f106107fc57610100808354040283529160200191610827565b820191906000526020600020905b81548152906001019060200180831161080a57829003601f168201915b505050505090506000610838611363565b9050600081510361084d578192505050610890565b60008251111561088257808260405160200161086a9291906122d7565b60405160208183030381529060405292505050610890565b61088b8461137a565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610931610ef0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109a35760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161099a9190611d72565b60405180910390fd5b6109ac81610f77565b50565b60006109c5674a2d093e2869f0d260c01b6113e3565b6109d967126129ef9a1c103060c01b6113e3565b6109ed67011fe83428b54e4060c01b6113e3565b600060086000815480929190610a029061232a565b919050559050610a1c67f41cd377fe4ddad160c01b6113e3565b610a306771a7ed8fd4ab493f60c01b6113e3565b610a3a84826113e6565b610a4e672d277f56003c535a60c01b6113e3565b610a6267cdbeabac88c63da960c01b6113e3565b610a6c81846114df565b610a80670e467f75752363a160c01b6113e3565b610a94675d3e5f40b05c0f3b60c01b6113e3565b808473ffffffffffffffffffffffffffffffffffffffff167fe7cd4ce7f2a465edc730269a1305e8a48bad821e8fb7e152ec413829c01a53c485604051610adb9190611cac565b60405180910390a3610af767cddee2837a2400c160c01b6113e3565b610b0b678daba344cdf0012060c01b6113e3565b8091505092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610be057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610bf05750610bef8261153b565b5b9050919050565b600080610c03836115a5565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c7657826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610c6d9190611e88565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610cd183838360016115e2565b505050565b600080610ce2846115a5565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610d2457610d238184866117a7565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610db557610d666000856000806115e2565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610e38576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610ef8610cbc565b73ffffffffffffffffffffffffffffffffffffffff16610f16610693565b73ffffffffffffffffffffffffffffffffffffffff1614610f7557610f39610cbc565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f6c9190611d72565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110ae57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110a59190611d72565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161119f9190611c01565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111561135d578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026111f0610cbc565b8685856040518563ffffffff1660e01b815260040161121294939291906123c7565b6020604051808303816000875af192505050801561124e57506040513d601f19601f8201168201806040525081019061124b9190612428565b60015b6112d2573d806000811461127e576040519150601f19603f3d011682016040523d82523d6000602084013e611283565b606091505b5060008151036112ca57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112c19190611d72565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461135b57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113529190611d72565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b606061138582610bf7565b506000611390611363565b905060008151116113b057604051806020016040528060008152506113db565b806113ba8461186b565b6040516020016113cb9291906122d7565b6040516020818303038152906040525b915050919050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114585760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161144f9190611d72565b60405180910390fd5b600061146683836000610cd6565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114da5760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016114d19190611d72565b60405180910390fd5b505050565b806006600084815260200190815260200160002090816114ff9190612601565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78260405161152f9190611e88565b60405180910390a15050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061161b5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561174f57600061162b84610bf7565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561169657508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156116a957506116a78184610895565b155b156116eb57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016116e29190611d72565b60405180910390fd5b811561174d57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6117b2838383611939565b61186657600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361182757806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161181e9190611e88565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161185d9291906126d3565b60405180910390fd5b505050565b60606000600161187a846119fa565b01905060008167ffffffffffffffff81111561189957611898611f19565b5b6040519080825280601f01601f1916602001820160405280156118cb5781602001600182028036833780820191505090505b509050600082602001820190505b60011561192e578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611922576119216126fc565b5b049450600085036118d9575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156119f157508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806119b257506119b18484610895565b5b806119f057508273ffffffffffffffffffffffffffffffffffffffff166119d883610c7f565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611a58577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611a4e57611a4d6126fc565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a95576d04ee2d6d415b85acef81000000008381611a8b57611a8a6126fc565b5b0492506020810190505b662386f26fc100008310611ac457662386f26fc100008381611aba57611ab96126fc565b5b0492506010810190505b6305f5e1008310611aed576305f5e1008381611ae357611ae26126fc565b5b0492506008810190505b6127108310611b12576127108381611b0857611b076126fc565b5b0492506004810190505b60648310611b355760648381611b2b57611b2a6126fc565b5b0492506002810190505b600a8310611b44576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b9681611b61565b8114611ba157600080fd5b50565b600081359050611bb381611b8d565b92915050565b600060208284031215611bcf57611bce611b57565b5b6000611bdd84828501611ba4565b91505092915050565b60008115159050919050565b611bfb81611be6565b82525050565b6000602082019050611c166000830184611bf2565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c56578082015181840152602081019050611c3b565b60008484015250505050565b6000601f19601f8301169050919050565b6000611c7e82611c1c565b611c888185611c27565b9350611c98818560208601611c38565b611ca181611c62565b840191505092915050565b60006020820190508181036000830152611cc68184611c73565b905092915050565b6000819050919050565b611ce181611cce565b8114611cec57600080fd5b50565b600081359050611cfe81611cd8565b92915050565b600060208284031215611d1a57611d19611b57565b5b6000611d2884828501611cef565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d5c82611d31565b9050919050565b611d6c81611d51565b82525050565b6000602082019050611d876000830184611d63565b92915050565b611d9681611d51565b8114611da157600080fd5b50565b600081359050611db381611d8d565b92915050565b60008060408385031215611dd057611dcf611b57565b5b6000611dde85828601611da4565b9250506020611def85828601611cef565b9150509250929050565b600080600060608486031215611e1257611e11611b57565b5b6000611e2086828701611da4565b9350506020611e3186828701611da4565b9250506040611e4286828701611cef565b9150509250925092565b600060208284031215611e6257611e61611b57565b5b6000611e7084828501611da4565b91505092915050565b611e8281611cce565b82525050565b6000602082019050611e9d6000830184611e79565b92915050565b611eac81611be6565b8114611eb757600080fd5b50565b600081359050611ec981611ea3565b92915050565b60008060408385031215611ee657611ee5611b57565b5b6000611ef485828601611da4565b9250506020611f0585828601611eba565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f5182611c62565b810181811067ffffffffffffffff82111715611f7057611f6f611f19565b5b80604052505050565b6000611f83611b4d565b9050611f8f8282611f48565b919050565b600067ffffffffffffffff821115611faf57611fae611f19565b5b611fb882611c62565b9050602081019050919050565b82818337600083830152505050565b6000611fe7611fe284611f94565b611f79565b90508281526020810184848401111561200357612002611f14565b5b61200e848285611fc5565b509392505050565b600082601f83011261202b5761202a611f0f565b5b813561203b848260208601611fd4565b91505092915050565b6000806000806080858703121561205e5761205d611b57565b5b600061206c87828801611da4565b945050602061207d87828801611da4565b935050604061208e87828801611cef565b925050606085013567ffffffffffffffff8111156120af576120ae611b5c565b5b6120bb87828801612016565b91505092959194509250565b600080604083850312156120de576120dd611b57565b5b60006120ec85828601611da4565b92505060206120fd85828601611da4565b9150509250929050565b600067ffffffffffffffff82111561212257612121611f19565b5b61212b82611c62565b9050602081019050919050565b600061214b61214684612107565b611f79565b90508281526020810184848401111561216757612166611f14565b5b612172848285611fc5565b509392505050565b600082601f83011261218f5761218e611f0f565b5b813561219f848260208601612138565b91505092915050565b600080604083850312156121bf576121be611b57565b5b60006121cd85828601611da4565b925050602083013567ffffffffffffffff8111156121ee576121ed611b5c565b5b6121fa8582860161217a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061224b57607f821691505b60208210810361225e5761225d612204565b5b50919050565b60006060820190506122796000830186611d63565b6122866020830185611e79565b6122936040830184611d63565b949350505050565b600081905092915050565b60006122b182611c1c565b6122bb818561229b565b93506122cb818560208601611c38565b80840191505092915050565b60006122e382856122a6565b91506122ef82846122a6565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061233582611cce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612367576123666122fb565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b600061239982612372565b6123a3818561237d565b93506123b3818560208601611c38565b6123bc81611c62565b840191505092915050565b60006080820190506123dc6000830187611d63565b6123e96020830186611d63565b6123f66040830185611e79565b8181036060830152612408818461238e565b905095945050505050565b60008151905061242281611b8d565b92915050565b60006020828403121561243e5761243d611b57565b5b600061244c84828501612413565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026124b77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261247a565b6124c1868361247a565b95508019841693508086168417925050509392505050565b6000819050919050565b60006124fe6124f96124f484611cce565b6124d9565b611cce565b9050919050565b6000819050919050565b612518836124e3565b61252c61252482612505565b848454612487565b825550505050565b600090565b612541612534565b61254c81848461250f565b505050565b5b8181101561257057612565600082612539565b600181019050612552565b5050565b601f8211156125b55761258681612455565b61258f8461246a565b8101602085101561259e578190505b6125b26125aa8561246a565b830182612551565b50505b505050565b600082821c905092915050565b60006125d8600019846008026125ba565b1980831691505092915050565b60006125f183836125c7565b9150826002028217905092915050565b61260a82611c1c565b67ffffffffffffffff81111561262357612622611f19565b5b61262d8254612233565b612638828285612574565b600060209050601f83116001811461266b5760008415612659578287015190505b61266385826125e5565b8655506126cb565b601f19841661267986612455565b60005b828110156126a15784890151825560018201915060208501945060208101905061267c565b868310156126be57848901516126ba601f8916826125c7565b8355505b6001600288020188555050505b505050505050565b60006040820190506126e86000830185611d63565b6126f56020830184611e79565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212200fdc162e1322397c330ab5b32049e7c586a8faad3894a843ec1af33d8b44342f64736f6c63430008140033";

type LOLConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LOLConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LOL__factory extends ContractFactory {
  constructor(...args: LOLConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      LOL & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LOL__factory {
    return super.connect(runner) as LOL__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LOLInterface {
    return new Interface(_abi) as LOLInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LOL {
    return new Contract(address, _abi, runner) as unknown as LOL;
  }
}
