/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { LOLToken, LOLTokenInterface } from "../../contracts/LOLToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_taxRate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taxRate",
        type: "uint256",
      },
    ],
    name: "setTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023bf380380620023bf833981810160405281019062000037919062000708565b816040518060400160405280600881526020017f4c4f4c546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4c4f4c00000000000000000000000000000000000000000000000000000000008152508160039081620000b59190620009bf565b508060049081620000c79190620009bf565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000136919062000ab7565b60405180910390fd5b6200015081620002dd60201b60201c565b50806200016e67f82b41cfdd0f821b60c01b620003a360201b60201c565b6200018a67e3383ebcca3d4e6460c01b620003a360201b60201c565b620001a66749efc38a2a970b2d60c01b620003a360201b60201c565b620001c2676c766fbe37ddf5ac60c01b620003a360201b60201c565b60c881111562000209576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002009062000b35565b60405180910390fd5b620002256752d32541839f913760c01b620003a360201b60201c565b62000241679d592d435443972960c01b620003a360201b60201c565b6200025d67d81c95f650de4cdc60c01b620003a360201b60201c565b6200027967d279fae9a8a823a160c01b620003a360201b60201c565b816006819055506200029c67e74f52c23504380860c01b620003a360201b60201c565b620002b867d242aee1e1870ce360c01b620003a360201b60201c565b620002d43369d3c21bcecceda1000000620003a660201b60201c565b50505062000c2c565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200041b5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000412919062000ab7565b60405180910390fd5b6200042f600083836200043360201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620004895780600260008282546200047c919062000b86565b925050819055506200055f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000518578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200050f9392919062000bd2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620005aa5780600260008282540392505081905550620005f7565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000656919062000c0f565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006958262000668565b9050919050565b620006a78162000688565b8114620006b357600080fd5b50565b600081519050620006c7816200069c565b92915050565b6000819050919050565b620006e281620006cd565b8114620006ee57600080fd5b50565b6000815190506200070281620006d7565b92915050565b6000806040838503121562000722576200072162000663565b5b60006200073285828601620006b6565b92505060206200074585828601620006f1565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620007d157607f821691505b602082108103620007e757620007e662000789565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620008517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000812565b6200085d868362000812565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620008a06200089a6200089484620006cd565b62000875565b620006cd565b9050919050565b6000819050919050565b620008bc836200087f565b620008d4620008cb82620008a7565b8484546200081f565b825550505050565b600090565b620008eb620008dc565b620008f8818484620008b1565b505050565b5b81811015620009205762000914600082620008e1565b600181019050620008fe565b5050565b601f8211156200096f576200093981620007ed565b620009448462000802565b8101602085101562000954578190505b6200096c620009638562000802565b830182620008fd565b50505b505050565b600082821c905092915050565b6000620009946000198460080262000974565b1980831691505092915050565b6000620009af838362000981565b9150826002028217905092915050565b620009ca826200074f565b67ffffffffffffffff811115620009e657620009e56200075a565b5b620009f28254620007b8565b620009ff82828562000924565b600060209050601f83116001811462000a37576000841562000a22578287015190505b62000a2e8582620009a1565b86555062000a9e565b601f19841662000a4786620007ed565b60005b8281101562000a715784890151825560018201915060208501945060208101905062000a4a565b8683101562000a91578489015162000a8d601f89168262000981565b8355505b6001600288020188555050505b505050505050565b62000ab18162000688565b82525050565b600060208201905062000ace600083018462000aa6565b92915050565b600082825260208201905092915050565b7f4c4f4c546f6b656e3a2054617820746f6f206869676800000000000000000000600082015250565b600062000b1d60168362000ad4565b915062000b2a8262000ae5565b602082019050919050565b6000602082019050818103600083015262000b508162000b0e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000b9382620006cd565b915062000ba083620006cd565b925082820190508082111562000bbb5762000bba62000b57565b5b92915050565b62000bcc81620006cd565b82525050565b600060608201905062000be9600083018662000aa6565b62000bf8602083018562000bc1565b62000c07604083018462000bc1565b949350505050565b600060208201905062000c26600083018462000bc1565b92915050565b6117838062000c3c6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c57806395d89b411161006657806395d89b411461023b578063a9059cbb14610259578063dd62ed3e14610289578063f2fde38b146102b9576100ea565b8063715018a6146101f5578063771a3a1d146101ff5780638da5cb5b1461021d576100ea565b806323b872dd116100c857806323b872dd1461015b5780632e5bb6ff1461018b578063313ce567146101a757806370a08231146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102d5565b6040516101049190611144565b60405180910390f35b610127600480360381019061012291906111ff565b610367565b604051610134919061125a565b60405180910390f35b61014561038a565b6040516101529190611284565b60405180910390f35b6101756004803603810190610170919061129f565b610394565b604051610182919061125a565b60405180910390f35b6101a560048036038101906101a091906112f2565b6103c3565b005b6101af61050b565b6040516101bc919061133b565b60405180910390f35b6101df60048036038101906101da9190611356565b610514565b6040516101ec9190611284565b60405180910390f35b6101fd61055c565b005b610207610570565b6040516102149190611284565b60405180910390f35b610225610576565b6040516102329190611392565b60405180910390f35b6102436105a0565b6040516102509190611144565b60405180910390f35b610273600480360381019061026e91906111ff565b610632565b604051610280919061125a565b60405180910390f35b6102a3600480360381019061029e91906113ad565b6108b9565b6040516102b09190611284565b60405180910390f35b6102d360048036038101906102ce9190611356565b610940565b005b6060600380546102e49061141c565b80601f01602080910402602001604051908101604052809291908181526020018280546103109061141c565b801561035d5780601f106103325761010080835404028352916020019161035d565b820191906000526020600020905b81548152906001019060200180831161034057829003601f168201915b5050505050905090565b6000806103726109c6565b905061037f8185856109ce565b600191505092915050565b6000600254905090565b60008061039f6109c6565b90506103ac8582856109e0565b6103b7858585610a74565b60019150509392505050565b6103d767218687ba3b36f9e460c01b610b68565b6103df610b6b565b6103f367b5cbd032e4a0f80960c01b610b68565b610407676323ffee20e09e1c60c01b610b68565b8061041c67f82b41cfdd0f821b60c01b610b68565b61043067e3383ebcca3d4e6460c01b610b68565b6104446749efc38a2a970b2d60c01b610b68565b610458676c766fbe37ddf5ac60c01b610b68565b60c881111561049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390611499565b60405180910390fd5b6104b06752d32541839f913760c01b610b68565b6104c4679d592d435443972960c01b610b68565b6104d867c54d25b420d59aae60c01b610b68565b6104ec67a0d24917c41b4e4f60c01b610b68565b61050067a29d9af1c8ec7ccf60c01b610b68565b816006819055505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610564610b6b565b61056e6000610bf2565b565b60065481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105af9061141c565b80601f01602080910402602001604051908101604052809291908181526020018280546105db9061141c565b80156106285780601f106105fd57610100808354040283529160200191610628565b820191906000526020600020905b81548152906001019060200180831161060b57829003601f168201915b5050505050905090565b600061064867817ff73e908bf26360c01b610b68565b61065c674bb4201426b5d36560c01b610b68565b61067067166fabc5c756f36360c01b610b68565b610684675f6122380196ca7f60c01b610b68565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ea9061152b565b60405180910390fd5b610707675717bbc8532dd8d960c01b610b68565b61071b67469830e7e192a46360c01b610b68565b61072f67d6129307f31d007460c01b610b68565b6107436745e3896cd0ed26d960c01b610b68565b60008211610786576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077d906115bd565b60405180910390fd5b61079a67740ad8c955bd01fd60c01b610b68565b6107ae6705ad79e7617a81fb60c01b610b68565b6107c2674f16d61fbe3bfa3b60c01b610b68565b60006103e8600654846107d5919061160c565b6107df919061167d565b90506107f567d2c84e3de22f9cf560c01b610b68565b610808667a028299316c8f60c01b610b68565b6000818461081691906116ae565b905061082c67a526feb02af43b0460c01b610b68565b610840671cd50904f77dc40360c01b610b68565b61084b338683610a74565b61085f67a73adc364233083060c01b610b68565b61087367d10169c990041fdd60c01b610b68565b6108853361087f610576565b84610a74565b61089967a8c02f9cec3f3cb060c01b610b68565b6108ad674da743bee7cf36c760c01b610b68565b60019250505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610948610b6b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109ba5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109b19190611392565b60405180910390fd5b6109c381610bf2565b50565b600033905090565b6109db8383836001610cb8565b505050565b60006109ec84846108b9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a6e5781811015610a5e578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a55939291906116e2565b60405180910390fd5b610a6d84848484036000610cb8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ae65760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610add9190611392565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b585760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b4f9190611392565b60405180910390fd5b610b63838383610e8f565b505050565b50565b610b736109c6565b73ffffffffffffffffffffffffffffffffffffffff16610b91610576565b73ffffffffffffffffffffffffffffffffffffffff1614610bf057610bb46109c6565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610be79190611392565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d2a5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d219190611392565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d9c5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d939190611392565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610e89578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e809190611284565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ee1578060026000828254610ed59190611719565b92505081905550610fb4565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f6d578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f64939291906116e2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ffd578060026000828254039250508190555061104a565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110a79190611284565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110ee5780820151818401526020810190506110d3565b60008484015250505050565b6000601f19601f8301169050919050565b6000611116826110b4565b61112081856110bf565b93506111308185602086016110d0565b611139816110fa565b840191505092915050565b6000602082019050818103600083015261115e818461110b565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111968261116b565b9050919050565b6111a68161118b565b81146111b157600080fd5b50565b6000813590506111c38161119d565b92915050565b6000819050919050565b6111dc816111c9565b81146111e757600080fd5b50565b6000813590506111f9816111d3565b92915050565b6000806040838503121561121657611215611166565b5b6000611224858286016111b4565b9250506020611235858286016111ea565b9150509250929050565b60008115159050919050565b6112548161123f565b82525050565b600060208201905061126f600083018461124b565b92915050565b61127e816111c9565b82525050565b60006020820190506112996000830184611275565b92915050565b6000806000606084860312156112b8576112b7611166565b5b60006112c6868287016111b4565b93505060206112d7868287016111b4565b92505060406112e8868287016111ea565b9150509250925092565b60006020828403121561130857611307611166565b5b6000611316848285016111ea565b91505092915050565b600060ff82169050919050565b6113358161131f565b82525050565b6000602082019050611350600083018461132c565b92915050565b60006020828403121561136c5761136b611166565b5b600061137a848285016111b4565b91505092915050565b61138c8161118b565b82525050565b60006020820190506113a76000830184611383565b92915050565b600080604083850312156113c4576113c3611166565b5b60006113d2858286016111b4565b92505060206113e3858286016111b4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061143457607f821691505b602082108103611447576114466113ed565b5b50919050565b7f4c4f4c546f6b656e3a2054617820746f6f206869676800000000000000000000600082015250565b60006114836016836110bf565b915061148e8261144d565b602082019050919050565b600060208201905081810360008301526114b281611476565b9050919050565b7f4c4f4c546f6b656e3a207472616e7366657220746f20746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006115156026836110bf565b9150611520826114b9565b604082019050919050565b6000602082019050818103600083015261154481611508565b9050919050565b7f4c4f4c546f6b656e3a20616d6f756e74206d757374206265206772656174657260008201527f207468616e207a65726f00000000000000000000000000000000000000000000602082015250565b60006115a7602a836110bf565b91506115b28261154b565b604082019050919050565b600060208201905081810360008301526115d68161159a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611617826111c9565b9150611622836111c9565b9250828202611630816111c9565b91508282048414831517611647576116466115dd565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611688826111c9565b9150611693836111c9565b9250826116a3576116a261164e565b5b828204905092915050565b60006116b9826111c9565b91506116c4836111c9565b92508282039050818111156116dc576116db6115dd565b5b92915050565b60006060820190506116f76000830186611383565b6117046020830185611275565b6117116040830184611275565b949350505050565b6000611724826111c9565b915061172f836111c9565b9250828201905080821115611747576117466115dd565b5b9291505056fea2646970667358221220fd9c5bf0893f6a3238e13fb3d931c9553326f89cc98636673a3a339bf2c4981a64736f6c63430008140033";

type LOLTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LOLTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LOLToken__factory extends ContractFactory {
  constructor(...args: LOLTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    _taxRate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, _taxRate, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    _taxRate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, _taxRate, overrides || {}) as Promise<
      LOLToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LOLToken__factory {
    return super.connect(runner) as LOLToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LOLTokenInterface {
    return new Interface(_abi) as LOLTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LOLToken {
    return new Contract(address, _abi, runner) as unknown as LOLToken;
  }
}
