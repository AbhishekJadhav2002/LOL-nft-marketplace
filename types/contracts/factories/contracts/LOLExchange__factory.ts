/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  LOLExchange,
  LOLExchangeInterface,
} from "../../contracts/LOLExchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ListingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "ListingSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "itemsListed",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
        ],
        internalType: "struct LOLExchange.Listing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isSold",
        type: "bool",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200194a3803806200194a8339818101604052810190620000379190620001f4565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000237565b60405180910390fd5b620000be81620000c660201b60201c565b505062000254565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001bc826200018f565b9050919050565b620001ce81620001af565b8114620001da57600080fd5b50565b600081519050620001ee81620001c3565b92915050565b6000602082840312156200020d576200020c6200018a565b5b60006200021d84828501620001dd565b91505092915050565b6200023181620001af565b82525050565b60006020820190506200024e600083018462000226565b92915050565b6116e680620002646000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100d85780638da5cb5b146100e2578063de74e57b14610100578063f2fde38b146101365761007d565b806351ed8288146100825780635e7f40451461009e578063619a55e8146100bc575b600080fd5b61009c60048036038101906100979190610e9d565b610152565b005b6100a6610512565b6040516100b39190611072565b60405180910390f35b6100d660048036038101906100d191906110c0565b6107a4565b005b6100e0610b1c565b005b6100ea610b30565b6040516100f79190611136565b60405180910390f35b61011a60048036038101906101159190610e9d565b610b59565b60405161012d979695949392919061116f565b60405180910390f35b610150600480360381019061014b91906111de565b610c08565b005b60006002600083815260200190815260200160002090508060050160009054906101000a900460ff16156101bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b290611268565b60405180910390fd5b60008160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082600401548273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161024b9190611136565b602060405180830381865afa158015610268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028c919061129d565b10156102cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c49061133c565b60405180910390fd5b82600401548273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161030d92919061135c565b602060405180830381865afa15801561032a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034e919061129d565b101561038f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610386906113f7565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd338560050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686600401546040518463ffffffff1660e01b81526004016103f493929190611417565b6020604051808303816000875af1158015610413573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610437919061147a565b508073ffffffffffffffffffffffffffffffffffffffff166323b872dd303386600301546040518463ffffffff1660e01b815260040161047993929190611417565b600060405180830381600087803b15801561049357600080fd5b505af11580156104a7573d6000803e3d6000fd5b5050505060018360050160006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16847f8f9d273ad6b9ef6936db5cd20a141ecb032af10f2a5fec60c106343670b2c87760405160405180910390a350505050565b6060600080600190505b600154811161056f576002600082815260200190815260200160002060050160009054906101000a900460ff1661055c578180610558906114d6565b9250505b8080610567906114d6565b91505061051c565b5060008167ffffffffffffffff81111561058c5761058b61151e565b5b6040519080825280602002602001820160405280156105c557816020015b6105b2610de1565b8152602001906001900390816105aa5790505b509050600080600190505b600154811161079a576002600082815260200190815260200160002060050160009054906101000a900460ff1661078757600260008281526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505083838151811061076d5761076c61154d565b5b60200260200101819052508180610783906114d6565b9250505b8080610792906114d6565b9150506105d0565b5081935050505090565b60008390503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016107f9919061157c565b602060405180830381865afa158015610816573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083a91906115ac565b73ffffffffffffffffffffffffffffffffffffffff1614610890576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108879061164b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016108cd93929190611417565b600060405180830381600087803b1580156108e757600080fd5b505af11580156108fb573d6000803e3d6000fd5b5050505060016000815480929190610912906114d6565b9190505550600060015490506040518060e001604052808281526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff16815250600260008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff16817f950e8565b79111fb6cb4c5dfda4966d8bdc2e05a09885138dea91f7f9afee6de88888888604051610b0c949392919061166b565b60405180910390a3505050505050565b610b24610c8e565b610b2e6000610d15565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905087565b610c10610c8e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c825760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c799190611136565b60405180910390fd5b610c8b81610d15565b50565b610c96610dd9565b73ffffffffffffffffffffffffffffffffffffffff16610cb4610b30565b73ffffffffffffffffffffffffffffffffffffffff1614610d1357610cd7610dd9565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d0a9190611136565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b6000819050919050565b610e7a81610e67565b8114610e8557600080fd5b50565b600081359050610e9781610e71565b92915050565b600060208284031215610eb357610eb2610e62565b5b6000610ec184828501610e88565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610eff81610e67565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3082610f05565b9050919050565b610f4081610f25565b82525050565b60008115159050919050565b610f5b81610f46565b82525050565b60e082016000820151610f776000850182610ef6565b506020820151610f8a6020850182610f37565b506040820151610f9d6040850182610f37565b506060820151610fb06060850182610ef6565b506080820151610fc36080850182610ef6565b5060a0820151610fd660a0850182610f52565b5060c0820151610fe960c0850182610f37565b50505050565b6000610ffb8383610f61565b60e08301905092915050565b6000602082019050919050565b600061101f82610eca565b6110298185610ed5565b935061103483610ee6565b8060005b8381101561106557815161104c8882610fef565b975061105783611007565b925050600181019050611038565b5085935050505092915050565b6000602082019050818103600083015261108c8184611014565b905092915050565b61109d81610f25565b81146110a857600080fd5b50565b6000813590506110ba81611094565b92915050565b600080600080608085870312156110da576110d9610e62565b5b60006110e8878288016110ab565b94505060206110f9878288016110ab565b935050604061110a87828801610e88565b925050606061111b87828801610e88565b91505092959194509250565b61113081610f25565b82525050565b600060208201905061114b6000830184611127565b92915050565b61115a81610e67565b82525050565b61116981610f46565b82525050565b600060e082019050611184600083018a611151565b6111916020830189611127565b61119e6040830188611127565b6111ab6060830187611151565b6111b86080830186611151565b6111c560a0830185611160565b6111d260c0830184611127565b98975050505050505050565b6000602082840312156111f4576111f3610e62565b5b6000611202848285016110ab565b91505092915050565b600082825260208201905092915050565b7f4c4f4c45786368616e67653a204e465420697320616c726561647920736f6c64600082015250565b600061125260208361120b565b915061125d8261121c565b602082019050919050565b6000602082019050818103600083015261128181611245565b9050919050565b60008151905061129781610e71565b92915050565b6000602082840312156112b3576112b2610e62565b5b60006112c184828501611288565b91505092915050565b7f4c4f4c45786368616e67653a20496e73756666696369656e7420746f6b656e2060008201527f62616c616e636500000000000000000000000000000000000000000000000000602082015250565b600061132660278361120b565b9150611331826112ca565b604082019050919050565b6000602082019050818103600083015261135581611319565b9050919050565b60006040820190506113716000830185611127565b61137e6020830184611127565b9392505050565b7f4c4f4c45786368616e67653a20496e73756666696369656e7420746f6b656e2060008201527f616c6c6f77616e63650000000000000000000000000000000000000000000000602082015250565b60006113e160298361120b565b91506113ec82611385565b604082019050919050565b60006020820190508181036000830152611410816113d4565b9050919050565b600060608201905061142c6000830186611127565b6114396020830185611127565b6114466040830184611151565b949350505050565b61145781610f46565b811461146257600080fd5b50565b6000815190506114748161144e565b92915050565b6000602082840312156114905761148f610e62565b5b600061149e84828501611465565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114e182610e67565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611513576115126114a7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020820190506115916000830184611151565b92915050565b6000815190506115a681611094565b92915050565b6000602082840312156115c2576115c1610e62565b5b60006115d084828501611597565b91505092915050565b7f4c4f4c45786368616e67653a204e465420546f6b656e206f776e65722063616e60008201527f206f6e6c7920637265617465206c697374696e67000000000000000000000000602082015250565b600061163560348361120b565b9150611640826115d9565b604082019050919050565b6000602082019050818103600083015261166481611628565b9050919050565b60006080820190506116806000830187611127565b61168d6020830186611127565b61169a6040830185611151565b6116a76060830184611151565b9594505050505056fea2646970667358221220fe9c63343d3f1ed40c3843a05e8c50edf75ba355df0820bfba05099c0698deda64736f6c63430008140033";

type LOLExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LOLExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LOLExchange__factory extends ContractFactory {
  constructor(...args: LOLExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      LOLExchange & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LOLExchange__factory {
    return super.connect(runner) as LOLExchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LOLExchangeInterface {
    return new Interface(_abi) as LOLExchangeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LOLExchange {
    return new Contract(address, _abi, runner) as unknown as LOLExchange;
  }
}
