/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  LOLExchange,
  LOLExchangeInterface,
} from "../../contracts/LOLExchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ListingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "ListingSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isSold",
        type: "bool",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200176a3803806200176a833981810160405281019062000037919062000213565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000256565b60405180910390fd5b620000be81620000e260201b60201c565b50620000db67625751eef98d4c0d60c01b620001a660201b60201c565b5062000273565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001db82620001ae565b9050919050565b620001ed81620001ce565b8114620001f957600080fd5b50565b6000815190506200020d81620001e2565b92915050565b6000602082840312156200022c576200022b620001a9565b5b60006200023c84828501620001fc565b91505092915050565b6200025081620001ce565b82525050565b60006020820190506200026d600083018462000245565b92915050565b6114e780620002836000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806351ed828814610067578063619a55e814610083578063715018a61461009f5780638da5cb5b146100a9578063de74e57b146100c7578063f2fde38b146100fd575b600080fd5b610081600480360381019061007c9190610e88565b610119565b005b61009d60048036038101906100989190610f13565b6106e1565b005b6100a7610b85565b005b6100b1610b99565b6040516100be9190610f89565b60405180910390f35b6100e160048036038101906100dc9190610e88565b610bc2565b6040516100f49796959493929190610fce565b60405180910390f35b6101176004803603810190610112919061103d565b610c71565b005b61012d6750b2eb65e83c9ce860c01b610cf7565b6101416748dd164b20c1c24f60c01b610cf7565b610155673f4ad3b11a148c6660c01b610cf7565b6000600260008381526020019081526020016000209050610180676356971956962d7c60c01b610cf7565b610194679ab2d52a67666dd060c01b610cf7565b6101a867ee292b4a288e294860c01b610cf7565b8060050160009054906101000a900460ff16156101fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f1906110c7565b60405180910390fd5b61020e67f9f8b49743c2480c60c01b610cf7565b6102226785ff8c283e18288660c01b610cf7565b610236675d62004cddf4412960c01b610cf7565b60008160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506102736717421a7103d4bfbc60c01b610cf7565b6102876771cbcca9811302bd60c01b610cf7565b60008260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506102c4678b41863f58ccd15260c01b610cf7565b6102d867257ef6da46bfdb1360c01b610cf7565b6102ec674b07e326883fb57160c01b610cf7565b82600401548273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161032a9190610f89565b602060405180830381865afa158015610347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036b91906110fc565b10156103ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a39061119b565b60405180910390fd5b6103c067dd7cf11537ac576b60c01b610cf7565b6103d467ebd5f3710ebcc44a60c01b610cf7565b6103e867f3b4275c728fd89660c01b610cf7565b6103fc679e07a5a1a52ba2e860c01b610cf7565b82600401548273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161043c9291906111bb565b602060405180830381865afa158015610459573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047d91906110fc565b10156104be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b590611256565b60405180910390fd5b6104d2672f2212dc5fbd4ac760c01b610cf7565b6104e667b449595d272a4c6060c01b610cf7565b6104fa6778706ff6b0aaf89060c01b610cf7565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd338560050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686600401546040518463ffffffff1660e01b815260040161055f93929190611276565b6020604051808303816000875af115801561057e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a291906112d9565b506105b76711ae760f43b64f3d60c01b610cf7565b6105cb671e61b7c3771de63e60c01b610cf7565b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd303386600301546040518463ffffffff1660e01b815260040161060c93929190611276565b600060405180830381600087803b15801561062657600080fd5b505af115801561063a573d6000803e3d6000fd5b50505050610652678d71425225091c1c60c01b610cf7565b60018360050160006101000a81548160ff02191690831515021790555061068367307710b895f72a4c60c01b610cf7565b61069767317ab79e230439db60c01b610cf7565b3373ffffffffffffffffffffffffffffffffffffffff16847f8f9d273ad6b9ef6936db5cd20a141ecb032af10f2a5fec60c106343670b2c87760405160405180910390a350505050565b6106f567fb868819611ccc3360c01b610cf7565b61070967b9dc9d591810858360c01b610cf7565b61071d67eef5aa7e28b300e260c01b610cf7565b600083905061073667d06b3ab66bdd319a60c01b610cf7565b61074a671326da558693a96660c01b610cf7565b61075e67999d3383b262642660c01b610cf7565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016107ae9190611306565b602060405180830381865afa1580156107cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ef9190611336565b73ffffffffffffffffffffffffffffffffffffffff1614610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c906113d5565b60405180910390fd5b6108596717e4f025fa26dbf260c01b610cf7565b61086d67c48acd983b3385b560c01b610cf7565b610881677d7b17e2ad82bbf560c01b610cf7565b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016108be93929190611276565b600060405180830381600087803b1580156108d857600080fd5b505af11580156108ec573d6000803e3d6000fd5b5050505061090467b44eb2195a98c4a460c01b610cf7565b6001600081548092919061091790611424565b919050555061093067ec8dcca584c449a760c01b610cf7565b610944677b7619f1e78724b260c01b610cf7565b6000600154905061095f67172fe65a39e41ea160c01b610cf7565b6040518060e001604052808281526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff16815250600260008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050610b146722bb0a708a395f4060c01b610cf7565b610b2867a1930534f834f90a60c01b610cf7565b3373ffffffffffffffffffffffffffffffffffffffff16817f950e8565b79111fb6cb4c5dfda4966d8bdc2e05a09885138dea91f7f9afee6de88888888604051610b75949392919061146c565b60405180910390a3505050505050565b610b8d610cfa565b610b976000610d81565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905087565b610c79610cfa565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ceb5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610ce29190610f89565b60405180910390fd5b610cf481610d81565b50565b50565b610d02610e45565b73ffffffffffffffffffffffffffffffffffffffff16610d20610b99565b73ffffffffffffffffffffffffffffffffffffffff1614610d7f57610d43610e45565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d769190610f89565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610e6581610e52565b8114610e7057600080fd5b50565b600081359050610e8281610e5c565b92915050565b600060208284031215610e9e57610e9d610e4d565b5b6000610eac84828501610e73565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ee082610eb5565b9050919050565b610ef081610ed5565b8114610efb57600080fd5b50565b600081359050610f0d81610ee7565b92915050565b60008060008060808587031215610f2d57610f2c610e4d565b5b6000610f3b87828801610efe565b9450506020610f4c87828801610efe565b9350506040610f5d87828801610e73565b9250506060610f6e87828801610e73565b91505092959194509250565b610f8381610ed5565b82525050565b6000602082019050610f9e6000830184610f7a565b92915050565b610fad81610e52565b82525050565b60008115159050919050565b610fc881610fb3565b82525050565b600060e082019050610fe3600083018a610fa4565b610ff06020830189610f7a565b610ffd6040830188610f7a565b61100a6060830187610fa4565b6110176080830186610fa4565b61102460a0830185610fbf565b61103160c0830184610f7a565b98975050505050505050565b60006020828403121561105357611052610e4d565b5b600061106184828501610efe565b91505092915050565b600082825260208201905092915050565b7f4c4f4c45786368616e67653a204e465420697320616c726561647920736f6c64600082015250565b60006110b160208361106a565b91506110bc8261107b565b602082019050919050565b600060208201905081810360008301526110e0816110a4565b9050919050565b6000815190506110f681610e5c565b92915050565b60006020828403121561111257611111610e4d565b5b6000611120848285016110e7565b91505092915050565b7f4c4f4c45786368616e67653a20496e73756666696369656e7420746f6b656e2060008201527f62616c616e636500000000000000000000000000000000000000000000000000602082015250565b600061118560278361106a565b915061119082611129565b604082019050919050565b600060208201905081810360008301526111b481611178565b9050919050565b60006040820190506111d06000830185610f7a565b6111dd6020830184610f7a565b9392505050565b7f4c4f4c45786368616e67653a20496e73756666696369656e7420746f6b656e2060008201527f616c6c6f77616e63650000000000000000000000000000000000000000000000602082015250565b600061124060298361106a565b915061124b826111e4565b604082019050919050565b6000602082019050818103600083015261126f81611233565b9050919050565b600060608201905061128b6000830186610f7a565b6112986020830185610f7a565b6112a56040830184610fa4565b949350505050565b6112b681610fb3565b81146112c157600080fd5b50565b6000815190506112d3816112ad565b92915050565b6000602082840312156112ef576112ee610e4d565b5b60006112fd848285016112c4565b91505092915050565b600060208201905061131b6000830184610fa4565b92915050565b60008151905061133081610ee7565b92915050565b60006020828403121561134c5761134b610e4d565b5b600061135a84828501611321565b91505092915050565b7f4c4f4c45786368616e67653a204e465420546f6b656e206f776e65722063616e60008201527f206f6e6c7920637265617465206c697374696e67000000000000000000000000602082015250565b60006113bf60348361106a565b91506113ca82611363565b604082019050919050565b600060208201905081810360008301526113ee816113b2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061142f82610e52565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611461576114606113f5565b5b600182019050919050565b60006080820190506114816000830187610f7a565b61148e6020830186610f7a565b61149b6040830185610fa4565b6114a86060830184610fa4565b9594505050505056fea26469706673582212202c223c2adb6c797f1cf3c7cede13fb783edf6886b19abd7dc3371e09805f431564736f6c63430008140033";

type LOLExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LOLExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LOLExchange__factory extends ContractFactory {
  constructor(...args: LOLExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      LOLExchange & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LOLExchange__factory {
    return super.connect(runner) as LOLExchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LOLExchangeInterface {
    return new Interface(_abi) as LOLExchangeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LOLExchange {
    return new Contract(address, _abi, runner) as unknown as LOLExchange;
  }
}
